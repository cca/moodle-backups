#!/usr/bin/env fish
# usage: ./findclass [SEMESTER] SECTION [--extract]
# e.g. ./findclass 2017FA DSMBA-610-01

function checkfile -d 'check individual compressed tar archive for file'
    set file $argv[1]
    echo "Checking $file"
    tar -tf $file | ack $section
    # backup can be in only one place, so we can finish up
    and exit_or_extract $file $section
end

function exit_or_extract -d 'found section, extract it from archive or exit without doing anything else'
    if set -q extract
        echo -n 'Extracting backup... '
        tar -xvf $argv[1] (tar -tf $argv[1] | ack --nocolor $argv[2])
    end
    exit 0
end

argparse --name findclass 'h/help' 'e/extract' -- $argv
# have to do this or flag isn't present in exit_or_extract function
if set -q _flag_extract; set --global extract $_flag_extract; end

if set -q _flag_help
    echo 'Find (and optionally, extract) section backups from the compressed archives stored in the backups folder.'
    echo -e '\tusage: ./findclass [SEMESTER] SECTION [--extract]'
    echo -e '\nSEMESTER is optional and is used to filter which archive files are searched. SECTION can be any part of a CCA section code or the Moodle ID of a section.\n'
    echo 'options:'
    echo -e '\t-e, --extract\talso extract the specified section, if found'
    echo -e '\t-h, --help\tthis help information'
    exit 0
end

if [ (count $argv) -eq 2 ]
    set semester $argv[1]
    set section $argv[2]
    for file in (ls backups/$semester*.tar.gz)
        checkfile $file
    end
    # if we got this far, we didn't find the backup
    echo 'Unable to find section in available backups.'
    exit 1
else if [ (count $argv) -eq 1 ]
    set section $argv[1]
    for file in (ls backups/*.tar.gz)
        checkfile $file
    end
    echo 'Unable to find section in available backups.'
    exit 1
end
